<?php

/**
 * @file
 * Install and uninstall code for the fogbugz module.
 */

/**
 * Implements hook_install().
 */
function fogbugz_install() {
  variable_set('fogbugz_protocol', NULL);
  variable_set('fogbugz_hostname', NULL);
  variable_set('fogbugz_port', NULL);
  variable_set('fogbugz_user_email', NULL);
  variable_set('fogbugz_user_password', NULL);
}

/**
 * Implements hook_uninstall().
 */
function fogbugz_uninstall() {
  variable_del('fogbugz_protocol');
  variable_del('fogbugz_hostname');
  variable_del('fogbugz_port');
  variable_del('fogbugz_user_email');
  variable_del('fogbugz_user_password');
}


/**
 * Implements hook_requirements().
 */
function fogbugz_requirements($phase) {
  $t = get_t();
  $requirements = array();
  $description = '';

  if ($phase == 'runtime') {
    if (extension_loaded('curl') === FALSE) {
      $description .= $t('The PHP curl extension was not found.') . '<br />';
    }

    if (extension_loaded('SimpleXML') === FALSE) {
      $description .= $t('The PHP simplexml extension was not found.') . '<br />';
    }

    $fogbugz_user_email = variable_get('fogbugz_user_email');
    $fogbugz_user_password = variable_get('fogbugz_user_password');
    $fogbugz_hostname = variable_get('fogbugz_hostname');
    $fogbugz_protocol = variable_get('fogbugz_protocol');
    $fogbugz_port = variable_get('fogbugz_port');
    if (is_null($fogbugz_user_email) || is_null($fogbugz_user_password) || is_null($fogbugz_hostname) || is_null($fogbugz_protocol) || is_null($fogbugz_port)) {
      $description .= $t('Fogbugz <a href="@fogbugz-configuration">URIs and Credential form</a> has not been configured.', array('@fogbugz-configuration' => url('admin/config/fogbugz')));
    }

    if ($description) {
      $requirements['fogbugz'] = array(
        'title' => $t('FogBugz'),
        'value' => $t('Not configured'),
        'description' => $description,
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}
